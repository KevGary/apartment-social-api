swagger: '2.0'
info:
  version: 1.0.0
  title: ApartmentSocial API
  description: >
    #### Backend for ApartmentSocial
basePath: /
parameters:
  id:
    name: id
    in: path
    description: id of user
    type: integer
    required: true
definitions:
  Links:
    type: object
  UsersCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/UsersResource'
  UserDocument:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/UsersResource'
  UsersResource:
    type: object
    properties:
      type:
        type: string
        enum:
        - user
      id:
        type: integer
      attributes:
        $ref: '#/definitions/User'
      links:
        $ref: '#/definitions/Links'
  User:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
  Error:
    type: object
    properties:
      error:
        type: array
        items:
          type: object
          properties:
            status:
              type: string
            source:
              type: object
              properties:
                pointer:
                  type: string
            title:
              type: string
            details:
              type: string

              UsersCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/UsersResource'


  ApartmentsCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/ApartmentsResource'
  ApartmentDocument:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/ApartmentsResource'
  ApartmentsResource:
    type: object
    properties:
      type:
        type: string
        enum:
        - apartment
      id:
        type: integer
      attributes:
        $ref: '#/definitions/Apartment'
      links:
        $ref: '#/definitions/Links'
  Apartment:
    type: object
    properties:
      name:
        type: string
      street_address:
        type: string
      city:
        type: string
      state:
        type: string
      zip_code:
        type: integer
  Error:
    type: object
    properties:
      error:
        type: array
        items:
          type: object
          properties:
            status:
              type: string
            source:
              type: object
              properties:
                pointer:
                  type: string
            title:
              type: string
            details:
              type: string

  LeasesCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/LeasesResource'
  LeaseDocument:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/LeasesResource'
  LeasesResource:
    type: object
    properties:
      type:
        type: string
        enum:
        - lease
      id:
        type: integer
      attributes:
        $ref: '#/definitions/Lease'
      links:
        $ref: '#/definitions/Links'
  Lease:
    type: object
    properties:
      user_id:
        type: integer
      apartment_id:
        type: integer
  Error:
    type: object
    properties:
      error:
        type: array
        items:
          type: object
          properties:
            status:
              type: string
            source:
              type: object
              properties:
                pointer:
                  type: string
            title:
              type: string
            details:
              type: string



  MessagesCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/MessagesResource'
  MessageDocument:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/MessagesResource'
  MessagesResource:
    type: object
    properties:
      type:
        type: string
        enum:
        - message
      id:
        type: integer
      attributes:
        $ref: '#/definitions/Message'
      links:
        $ref: '#/definitions/Links'
  Message:
    type: object
    properties:
      content:
        type: string
      timestamp:
        type: string
  Error:
    type: object
    properties:
      error:
        type: array
        items:
          type: object
          properties:
            status:
              type: string
            source:
              type: object
              properties:
                pointer:
                  type: string
            title:
              type: string
            details:
              type: string

paths:
  '/users':
    get:
      description: >
        Get all users
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UsersCollection'
    post:
      description: >
        Posts a new user
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserDocument'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: Payload
          in: body
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - user
                  attributes:
                    type: object
                    properties:
                      first_name:
                        type: string
                      last_name:
                        type: string
  '/users/{id}':
    get:
      parameters:
        - $ref: '#/parameters/id'
      description: >
        Get one user
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Users'
  '/users/{id}':
    get:
      parameters:
        - $ref: '#/parameters/id'
      description: >
        Get one user
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UsersCollection'

  '/apartments':
    get:
      description: >
        Get all apartments
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApartmentsCollection' 
    post:
      description: >
        Posts a new apartment
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApartmentDocument'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: Payload
          in: body
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - apartment
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string 
                      street_address:
                        type: string
                      city:
                        type: string
                      state:
                        type: string
                      zip_code:
                        type: integer
  '/apartments/{id}':
    get:
      parameters:
        - $ref: '#/parameters/id'
      description: >
        Get one apartment
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApartmentsCollection'     
  '/leases':
    get:
      description: >
        Get all leases
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LeasesCollection'

  '/messages':
    get:
      description: >
        Get all messages
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MessagesCollection'
    post:
      description: >
        Posts a new message
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MessageDocument'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: Payload
          in: body
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - message
                  attributes:
                    type: object
                    properties:
                      content:
                        type: string
                      timestamp:
                        type: string
  '/messages/{id}':
    get:
      parameters:
        - $ref: '#/parameters/id'
      description: >
        Get one message
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MessagesCollection'    